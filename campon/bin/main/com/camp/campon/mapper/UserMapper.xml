<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace="매퍼 인터페이스 경로" -->
<mapper namespace="com.camp.campon.mapper.UserMapper">
    
    <!-- Users 매핑-->
    <!-- <resultMap type="Users" id="userMap">
        <id property="userNo" column="user_no" />
        <result property="userNo" column="user_no" />
        <result property="userId" column="user_id" />
        <result property="userPw" column="user_pw" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="enabled" column="enabled" />
        <result property="regDate" column="reg_date" />
        <result property="updDate" column="upd_date" />
        <collection property="authList" resultMap="authMap"></collection>
    </resultMap> -->
        
    <!-- UserAuth 매핑 -->
    <!-- <resultMap type="UserAuth" id="authMap">
        <result property="userId" column="user_id" />
        <result property="auth" column="auth" />
    </resultMap> -->

        <!-- 회원 조회 - id -->
    <!-- <select id="login" resultMap="userMap">
        SELECT u.user_no
              ,u.user_id
              ,user_pw
              ,name
              ,email
              ,enabled
              ,reg_date
              ,upd_date
              ,auth
        FROM user u LEFT OUTER JOIN user_auth auth 
                    ON u.user_id = auth.user_id
        WHERE u.user_id = #{userId}
    </select> -->



    <!-- 회원 권한 등록 -->
    <!-- <insert id="insertAuth">
        INSERT INTO user_auth( user_id, auth ) 
        VALUES ( #{userId}, #{auth} )
    </insert> -->



    <!-- 회원가입 -->
    <insert id="insert">
        INSERT INTO `user` ( user_id, user_pw, user_name, user_tel, user_email, user_address, company_name, company_number, auth )
        VALUES ( #{userId}, #{userPw}, #{userName}, #{userTel}, #{userEmail}, #{userAddress}, #{companyName}, #{companyNumber}, #{auth} )
    </insert>

    <!-- 회원 조회 -->
    <select id="select" resultType="Users">
        SELECT *
        FROM `user`
        WHERE user_no = #{userNo}
    </select>

    <!--회원 조회 (일반회원 / 기업회원)-->
    <select id="memberList" resultType="Users">
    SELECT * FROM `user` WHERE auth=
        <choose>
        <when test="auth == 'ROLE_USER'">'ROLE_USER'</when>
        <when test="auth == 'ROLE_SELL'">'ROLE_SELL'</when>
        </choose>
    </select>

    <!-- 회원 조회 - id -->
    <select id="selectById" resultType="Users">
        SELECT *
        FROM `user`
        WHERE user_id = #{userId}
    </select>

    <!-- 회원 조회 - id -->
    <select id="selectedById" resultType="Users">
        SELECT *
        FROM `user`
        WHERE user_id = #{userId}
    </select>

    <!-- 회원 조회 - id -->
    <select id="login" resultType="Users">
        SELECT *
        FROM `user`
        WHERE user_id = #{username}
    </select>

    <!-- 회원 수정 -->
    <update id="update">
    <!--user_id = #{userId} 뺌. 아이디는 수정 불가능하도록..-->
        UPDATE user
           SET user_pw = #{userPw}
              ,user_name = #{userName}
              ,user_email = #{userEmail}
              ,user_address = #{userAddress}
              ,user_tel = #{userTel}
              ,company_name = #{companyName}
              ,company_number = #{companyNumber}
              ,upd_date = now()
        WHERE user_id = #{userId}
    </update>

    <!--id 중복 검사-->
    <select id="userIds" resultType="String">
    SELECT user_id FROM user
    </select>


    <!-- 회원 삭제 -->
    <delete id="delete">
        DELETE FROM user
        WHERE user_id = #{userId}
    </delete>

    <!-- 캠핑업체판매자 정보-->
    <select id="productsseller" resultType="Users">
        select * from user where user_no = (select user_no from campproduct where camp_no = #{campNo})
    </select>
    <!--캠핑업체 판매자의 전화번호-->
    <select id="sellerTel" resultType="String">
        SELECT u.user_tel
        FROM campdetail cd JOIN user u ON cd.user_no = u.user_no
        WHERE cp_dt_no = 1
    </select>
</mapper>